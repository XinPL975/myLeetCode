翻转一棵二叉树。

示例：

输入：

     4
   /   \
  2     7
 / \   / \
1   3 6   9

输出：

     4
   /   \
  7     2
 / \   / \
9   6 3   1


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 注意：这道题的关键点在于 翻转整棵树就是交换每个节点的左右子节点！于是把交换左右子节点的代码放在前序遍历的位置！
 
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root==null) return root;   //一定不要忘记root为null的特殊情况！否则会出现空指针异常！切记切记！
        TreeNode temp=root.left;
        root.left=root.right;
        root.right=temp;
        invertTree(root.left);
        invertTree(root.right);
        return root;            //每次都会忘记return！不要忘记return！
    }                   
}
